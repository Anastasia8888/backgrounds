{"version":3,"sources":["components/ConstructorSection/BackgroundExamples/shadertoy-tex17.jpg","components/HeaderSection/Header.js","common/timeLoop.js","components/HeaderSection/Background.js","components/ConstructorSection/BackgroundExamples/GradientsLoop.js","components/ConstructorSection/BackgroundExamples/Example2.js","components/ConstructorSection/BackgroundExamples/DesertPassageLoop.js","components/ConstructorSection/BackgroundExamples/Example3.js","components/ConstructorSection/BackgroundExamples/Example1.js","components/ConstructorSection/ConstructorLayout.js","components/Output.js","components/ConstructorSection/GenerateModal.js","components/ConstructorSection/Settings.js","components/ConstructorSection/BackgroundCarousel.js","components/Main.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","__webpack_require__","p","Title","styled","div","_templateObject","Root","_templateObject2","Button","button","_templateObject3","darken","Bold","span","_templateObject4","Header","react_default","a","createElement","react_scroll_to","_ref","scrollTo","onClick","y","smooth","timeLoop","C","_ref$refreshRate","arguments","length","undefined","refreshRate","TL","_PureComponent","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","time","tick","inherits","createClass","key","value","startTime","lastTime","_this2","interval","_r","raf","loop","t","setState","cancel","assign","props","PureComponent","displayName","name","hoistNonReactStatics","Preview","frag","visitor","width","height","gl_react_lib","shader","uniforms","Background","Visitor","onSurfaceDrawError","error","onSurfaceDrawEnd","_this$props","_this$state","Component","defaultProps","GLSL","Background_templateObject","shaders","Shaders","create","gradients","GradientsLoop_templateObject","GradientsLoop","colors","Math","cos","sin","particles","vignetteColorSeparationDistortion","Example2_templateObject","Vignette","children","mouse","freq","amp","max","moving","Example2","onMouseMove","e","rect","target","getBoundingClientRect","clientX","left","bottom","clientY","desertPassage","DesertPassageLoop_templateObject","DesertPassageLoop","iGlobalTime","iChannel0","shadertoyTex17jpg","frameRate","squareTunnel","Example3_templateObject","Example3","sdf1","Example1_templateObject","Example1","ConstructorLayout_templateObject","ImgWrapper","input","ConstructorLayout_templateObject2","ConstructorLayout_templateObject3","ImagesBlock","ConstructorLayout_templateObject4","elements","id","BackgroundExamples_Example1","BackgroundExamples_GradientsLoop","Example2_Example2","BackgroundExamples_DesertPassageLoop","BackgroundExamples_Example3","HeaderSection_Background","ConstructorLayout","selectedItem","selectNewItem","filter","item","currentTarget","console","log","getSelectedItem","ConstructorLayout_Root","map","tooltip","title","lib","Saturate","Output_templateObject","contrast","saturation","brightness","Output","Output_Saturate","CodeArea","GenerateModal_templateObject","GenerateModal","visible","onOk","onCancel","modal","react_router_dom","to","Settings_templateObject","GenerateButton","Settings_templateObject2","Settings_templateObject3","Settings_templateObject4","Inputs","_templateObject5","ImageBlock","_templateObject6","_templateObject7","Hr","hr","_templateObject8","SettingsBlock","_templateObject9","ItemName","_templateObject10","Settings","blue","onChangeContrast","onChangeSaturation","onChangeBrightness","onChangeBlue","onChangeHeight","onChangeWidth","generateBackground","Settings_Root","Settings_Saturate","Settings_Header","row","slider","min","onChange","placeholder","style","onBlur","type","GenerateModal_GenerateModal","BackgroundCarousel_templateObject","h1","BackgroundCarousel_templateObject2","BackgroundCarousel","el","BackgroundCarousel_Root","BackgroundCarousel_Header","Settings_Settings","ConstructorLayout_ConstructorLayout","Main_templateObject","BackgroundWrapper","Main_templateObject2","Main","Main_Root","HeaderSection_Header","BackgroundCarousel_BackgroundCarousel","Boolean","window","location","hostname","match","ReactDOM","render","react_router","path","exact","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7768ee72.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shadertoy-tex17.4d266160.jpg\";","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { darken } from 'polished'\r\nimport { ScrollTo } from 'react-scroll-to'\r\n\r\nconst Title = styled.div`\r\n  margin: 200px auto 80px auto;\r\n  color: #fff;\r\n  font-size: 60px;\r\n  max-width: 800px;\r\n  text-align: center;\r\n`\r\nconst Root = styled.div`\r\n  position: relative;\r\n  z-index: 1;\r\n`\r\n\r\nconst Button = styled.button`\r\n  outline: none;\r\n  width: 300px;\r\n  height: 50px;\r\n  margin: 0 auto;\r\n  display: block;\r\n  font-size: 25px;\r\n  font-weight: bold;\r\n  background-color: #f4bb41;\r\n  border: none;\r\n  border-radius: 30px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background: ${darken(0.2, '#f4bb41')};\r\n  }\r\n`\r\nconst Bold = styled.span`\r\n  font-weight: bold;\r\n  color: #f4bb41;\r\n`\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Root>\r\n      <Title>\r\n        Cоздавайте уникальные <Bold>интерактивные фоны</Bold> для ваших сайтов\r\n        вместе с нами!\r\n      </Title>\r\n      <ScrollTo>\r\n        {({ scrollTo }) => (\r\n          <Button onClick={() => scrollTo({ y: 900, smooth: true })}>\r\n            Создать фон\r\n          </Button>\r\n        )}\r\n      </ScrollTo>\r\n    </Root>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","//@flow\r\nimport React, { PureComponent } from 'react'\r\nimport raf from 'raf'\r\nimport hoistNonReactStatics from 'hoist-non-react-statics'\r\n\r\n// NB this is only an utility for the examples\r\nexport default (\r\n  C: ReactClass<*>,\r\n  { refreshRate = 60 }: { refreshRate?: number } = {}\r\n): ReactClass<*> => {\r\n  class TL extends PureComponent {\r\n    static displayName = `timeLoop(${C.displayName || C.name || ''})`\r\n    state: { time: number }\r\n    state = {\r\n      time: 0,\r\n      tick: 0\r\n    }\r\n    _r: any\r\n    componentDidMount() {\r\n      let startTime: number, lastTime: number\r\n      let interval = 1000 / refreshRate\r\n      lastTime = -interval\r\n      const loop = (t: number) => {\r\n        this._r = raf(loop)\r\n        if (!startTime) startTime = t\r\n        if (t - lastTime > interval) {\r\n          lastTime = t\r\n          this.setState({\r\n            time: t - startTime,\r\n            tick: this.state.tick + 1\r\n          })\r\n        }\r\n      }\r\n      this._r = raf(loop)\r\n    }\r\n    componentWillUnmount() {\r\n      raf.cancel(this._r)\r\n    }\r\n    render() {\r\n      return <C {...this.props} {...this.state} />\r\n    }\r\n  }\r\n\r\n  hoistNonReactStatics(TL, C)\r\n\r\n  return TL\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Node, Visitor, GLSL } from 'gl-react'\r\nimport { Surface } from 'gl-react-dom'\r\n\r\nimport timeLoop from '../../common/timeLoop'\r\n\r\nconst Preview = timeLoop(({ frag, visitor, time, width, height }) => (\r\n  <Node shader={{ frag }} uniforms={{ time: time / 1000 }} />\r\n))\r\n\r\nclass Background extends Component {\r\n  props: { frag: string }\r\n  state: { error: ?Error, visitor: Visitor }\r\n  static defaultProps = {\r\n    // adapted from http://glslsandbox.com/e#27937.0\r\n    frag: GLSL`\r\nprecision highp float;\r\nvarying vec2 uv;\r\n\r\nuniform float time;\r\n\r\nvoid main() {\r\n  float amnt;\r\n  float nd;\r\n  vec4 cbuff = vec4(0.0);\r\n  for(float i=0.0; i<5.0;i++){\r\n    nd = sin(3.17*0.8*uv.x + (i*0.1+sin(+time)*0.2) + time)*0.8+0.1 + uv.x;\r\n    amnt = 1.0/abs(nd-uv.y)*0.01;\r\n    cbuff += vec4(amnt, amnt*0.3 , amnt*uv.y, 90.0);\r\n  }\r\n  for(float i=0.0; i<1.0;i++){\r\n    nd = sin(3.14*2.0*uv.y + i*40.5 + time)*90.3*(uv.y+80.3)+0.5;\r\n    amnt = 1.0/abs(nd-uv.x)*0.015;\r\n    cbuff += vec4(amnt*0.2, amnt*0.2 , amnt*uv.x, 1.0);\r\n  }\r\n  gl_FragColor = cbuff;\r\n}\r\n`\r\n  }\r\n  constructor() {\r\n    super()\r\n    const visitor = new Visitor()\r\n    visitor.onSurfaceDrawError = (error: Error) => {\r\n      this.setState({ error })\r\n      return true\r\n    }\r\n    visitor.onSurfaceDrawEnd = () => this.setState({ error: null })\r\n    this.state = { error: null, visitor }\r\n  }\r\n  render() {\r\n    const { frag, height, width } = this.props\r\n    const { error, visitor } = this.state\r\n    return (\r\n      <div>\r\n        <Preview frag={frag} height={height} width={width} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Background\r\n","import React from 'react'\r\nimport { Shaders, Node, GLSL } from 'gl-react'\r\nimport { Surface } from 'gl-react-dom'\r\n\r\nimport timeLoop from '../../../common/timeLoop'\r\n\r\nconst shaders = Shaders.create({\r\n  gradients: {\r\n    frag: GLSL`\r\nprecision highp float;\r\nvarying vec2 uv;\r\nuniform vec4 colors[3];\r\nuniform vec2 particles[3];\r\nvoid main () {\r\n  vec4 sum = vec4(0.0);\r\n  for (int i=0; i<3; i++) {\r\n    vec4 c = colors[i];\r\n    vec2 p = particles[i];\r\n    float d = c.a * smoothstep(0.6, 0.2, distance(p, uv));\r\n    sum += d * vec4(c.a * c.rgb, c.a);\r\n  }\r\n  if (sum.a > 1.0) {\r\n    sum.rgb /= sum.a;\r\n    sum.a = 1.0;\r\n  }\r\n  gl_FragColor = vec4(sum.a * sum.rgb, 1.0);\r\n}\r\n`\r\n  }\r\n})\r\n\r\n// Alternative syntax using React stateless function component\r\nconst Gradients = ({ time }) => (\r\n  <Node\r\n    shader={shaders.gradients}\r\n    uniforms={{\r\n      colors: [\r\n        [Math.cos(0.002 * time), Math.sin(0.002 * time), 0.2, 1],\r\n        [Math.sin(0.002 * time), -Math.cos(0.002 * time), 0.1, 1],\r\n        [0.3, Math.sin(3 + 0.002 * time), Math.cos(1 + 0.003 * time), 1]\r\n      ],\r\n      particles: [[0.3, 0.3], [0.7, 0.5], [0.4, 0.9]]\r\n    }}\r\n  />\r\n)\r\n\r\nconst GradientsLoop = timeLoop(Gradients)\r\nexport default GradientsLoop\r\n","import React, { Component } from 'react'\r\nimport { Shaders, Node, GLSL } from 'gl-react'\r\nimport { Surface } from 'gl-react-dom'\r\n\r\nimport timeLoop from '.././../../common/timeLoop'\r\n\r\nconst shaders = Shaders.create({\r\n  vignetteColorSeparationDistortion: {\r\n    frag: GLSL`\r\nprecision highp float;\r\nvarying vec2 uv;\r\nuniform sampler2D t;\r\nuniform vec2 mouse;\r\nuniform float time, amp, freq, moving;\r\nvec2 lookup (vec2 offset, float amp2) {\r\n  return mod(\r\n    uv + amp2 * amp * vec2(\r\n      cos(freq*(uv.x+offset.x)+time),\r\n      sin(freq*(uv.y+offset.x)+time))\r\n      + vec2(\r\n        moving * time/10.0,\r\n        0.0),\r\n    vec2(1.0));\r\n}\r\nvoid main() {\r\n  float dist = distance(uv, mouse);\r\n  float amp2 = pow(1.0 - dist, 2.0);\r\n  float colorSeparation = 0.02 * mix(amp2, 1.0, 0.5);\r\n  vec2 orientation = vec2(1.0, 0.0);\r\n  float a = (1.0-min(0.95, pow(1.8 * distance(uv, mouse), 4.0) +\r\n  0.5 * pow(distance(fract(50.0 * uv.y), 0.5), 2.0)));\r\n  gl_FragColor = vec4(a * vec3(\r\n    texture2D(t, lookup(colorSeparation * orientation, amp2)).r,\r\n    texture2D(t, lookup(-colorSeparation * orientation, amp2)).g,\r\n    texture2D(t, lookup(vec2(0.0), amp2)).b),\r\n    1.0);\r\n}\r\n`\r\n  }\r\n})\r\n\r\nconst Vignette = timeLoop(({ children: t, time, mouse }) => (\r\n  <Node\r\n    shader={shaders.vignetteColorSeparationDistortion}\r\n    uniforms={{\r\n      t,\r\n      time: time / 1000, // seconds is better for float precision\r\n      mouse,\r\n      freq: 10 + 2 * Math.sin(0.0007 * time),\r\n      amp: 0.05 + Math.max(0, 0.03 * Math.cos(0.001 * time)),\r\n      moving: 0\r\n    }}\r\n  />\r\n))\r\n\r\nexport default class Example2 extends Component {\r\n  state = {\r\n    mouse: [0.5, 0.5]\r\n  }\r\n  onMouseMove = (e) => {\r\n    const rect = e.target.getBoundingClientRect()\r\n    this.setState({\r\n      mouse: [\r\n        (e.clientX - rect.left) / rect.width,\r\n        (rect.bottom - e.clientY) / rect.height\r\n      ]\r\n    })\r\n  }\r\n  render() {\r\n    const { mouse } = this.state\r\n    return (\r\n      <Vignette mouse={mouse}>\r\n        https://pbs.twimg.com/profile_images/750970122605658112/I1wXSCHG.jpg\r\n      </Vignette>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Shaders, Node, GLSL } from 'gl-react'\r\nimport { Surface } from 'gl-react-dom'\r\n\r\nimport timeLoop from '../../../common/timeLoop'\r\n\r\nimport shadertoyTex17jpg from './shadertoy-tex17.jpg'\r\n\r\nconst shaders = Shaders.create({\r\n  desertPassage: {\r\n    // from https://www.shadertoy.com/view/XtyGzc\r\n    frag: GLSL`\r\nprecision mediump float;\r\nvarying vec2 uv;\r\nuniform float iGlobalTime;\r\nuniform sampler2D iChannel0;\r\n#define FAR 80.\r\nmat2 rot2( float th ){ vec2 a = sin(vec2(1.5707963, 0) + th); return mat2(a, -a.y, a.x); }\r\nfloat hash( float n ){ return fract(cos(n)*45758.5453); }\r\nfloat hash( vec3 p ){ return fract(sin(dot(p, vec3(7, 157, 113)))*45758.5453); }\r\nfloat drawObject(in vec3 p){ p = fract(p)-.5; return dot(p, p); }\r\nfloat cellTile(in vec3 p){\r\n    vec4 d;\r\n    d.x = drawObject(p - vec3(.81, .62, .53));\r\n    p.xy = vec2(p.y-p.x, p.y + p.x)*.7071;\r\n    d.y = drawObject(p - vec3(.39, .2, .11));\r\n    p.yz = vec2(p.z-p.y, p.z + p.y)*.7071;\r\n    d.z = drawObject(p - vec3(.62, .24, .06));\r\n    p.xz = vec2(p.z-p.x, p.z + p.x)*.7071;\r\n    d.w = drawObject(p - vec3(.2, .82, .64));\r\n    d.xy = min(d.xz, d.yw);\r\n    return min(d.x, d.y)*2.66;\r\n}\r\nvec2 path(in float z){ return vec2(20.*sin(z * .04), 4.*cos(z * .09) + 3.*(sin(z*.025)  - 1.)); }\r\nfloat surfFunc(in vec3 p){\r\n    float c = cellTile(p/6.);\r\n    return mix(c, cos(c*6.283*2.)*.5 + .5, .125);\r\n}\r\nfloat smin(float a, float b , float s){\r\n    float h = clamp( 0.5 + 0.5*(b-a)/s, 0. , 1.);\r\n    return mix(b, a, h) - h*(1.0-h)*s;\r\n}\r\nfloat smax(float a, float b, float s){\r\n    float h = clamp( 0.5 + 0.5*(a-b)/s, 0., 1.);\r\n    return mix(b, a, h) + h*(1.0-h)*s;\r\n}\r\nfloat map(vec3 p){\r\n    float sf = surfFunc(p);\r\n    float cav = dot(cos(p*3.14159265/8.), sin(p.yzx*3.14159265/8.)) + 2.;\r\n    p.xy -= path(p.z);\r\n    float tun = 1.5 - length(p.xy*vec2(1, .4));\r\n    tun = smax(tun, 1.-cav, 2.) + .75 + (.5-sf);\r\n    float gr = p.y + 7. - cav*.5 + (.5-sf)*.5;\r\n    float rf = p.y - 15.;\r\n    return smax(smin(tun, gr, .1), rf, 1.);\r\n}\r\nfloat trace(in vec3 ro, in vec3 rd){\r\n    float t = 0., h;\r\n    for(int i=0; i<128; i++){\r\n        h = map(ro+rd*t);\r\n        if(abs(h)<0.002*(t*.25 + 1.) || t>FAR) break;\r\n        t += h*.8;\r\n    }\r\n    return min(t, FAR);\r\n}\r\nvec3 normal(in vec3 p)\r\n{\r\n    vec2 e = vec2(-1., 1.)*0.001;\r\n\treturn normalize(e.yxx*map(p + e.yxx) + e.xxy*map(p + e.xxy) +\r\n\t\t\t\t\t e.xyx*map(p + e.xyx) + e.yyy*map(p + e.yyy) );\r\n}\r\nvec3 tex3D( sampler2D t, in vec3 p, in vec3 n ){\r\n    n = max(abs(n) - .2, .001);\r\n    n /= (n.x + n.y + n.z );\r\n\tp = (texture2D(t, p.yz)*n.x + texture2D(t, p.zx)*n.y + texture2D(t, p.xy)*n.z).xyz;\r\n    return p*p;\r\n}\r\nvec3 doBumpMap( sampler2D tx, in vec3 p, in vec3 n, float bf){\r\n    const vec2 e = vec2(0.001, 0);\r\n    mat3 m = mat3( tex3D(tx, p - e.xyy, n), tex3D(tx, p - e.yxy, n), tex3D(tx, p - e.yyx, n));\r\n    vec3 g = vec3(0.299, 0.587, 0.114)*m;\r\n    g = (g - dot(tex3D(tx,  p , n), vec3(0.299, 0.587, 0.114)) )/e.x; g -= n*dot(n, g);\r\n    return normalize( n + g*bf );\r\n}\r\nfloat n3D(in vec3 p){\r\n\tconst vec3 s = vec3(7, 157, 113);\r\n\tvec3 ip = floor(p); p -= ip;\r\n    vec4 h = vec4(0., s.yz, s.y + s.z) + dot(ip, s);\r\n    p = p*p*(3. - 2.*p);\r\n    h = mix(fract(sin(h)*43758.5453), fract(sin(h + s.x)*43758.5453), p.x);\r\n    h.xy = mix(h.xz, h.yw, p.y);\r\n    return mix(h.x, h.y, p.z);\r\n}\r\nfloat bumpSurf3D( in vec3 p){\r\n    float bmp = cellTile(p/3.)*.8 + cellTile(p)*.2;\r\n    float ns = n3D(p*6. - bmp*6.);\r\n    return mix(bmp, 1. - abs(ns-.333)/.667, .05);\r\n}\r\nvec3 doBumpMap(in vec3 p, in vec3 nor, float bumpfactor){\r\n    const vec2 e = vec2(0.001, 0);\r\n    float ref = bumpSurf3D(p);\r\n    vec3 grad = (vec3(bumpSurf3D(p - e.xyy),\r\n                      bumpSurf3D(p - e.yxy),\r\n                      bumpSurf3D(p - e.yyx) )-ref)/e.x;\r\n    grad -= nor*dot(nor, grad);\r\n    return normalize( nor + grad*bumpfactor );\r\n}\r\nfloat softShadow(in vec3 ro, in vec3 rd, in float start, in float end, in float k){\r\n    float shade = 1.0;\r\n    const int maxIterationsShad = 10;\r\n    float dist = start;\r\n    float stepDist = end/float(maxIterationsShad);\r\n    for (int i=0; i<maxIterationsShad; i++){\r\n        float h = map(ro + rd*dist);\r\n        shade = min(shade, smoothstep(0., 1., k*h/dist));\r\n        dist += clamp(h, .2, stepDist);\r\n        if (abs(h)<0.001 || dist > end) break;\r\n    }\r\n    return min(max(shade, 0.) + .1, 1.);\r\n}\r\nfloat calculateAO( in vec3 p, in vec3 n)\r\n{\r\n\tfloat ao = 0.0, l;\r\n\tconst float nbIte = 6.0;\r\n    const float maxDist = 3.;\r\n    for(float i=1.; i< nbIte+.5; i++ ){\r\n        l = (i*.66 + hash(i)*.34)/nbIte*maxDist;\r\n        ao += (l - map( p + n*l ))/(1.+ l);\r\n    }\r\n    return clamp( 1.-ao/nbIte, 0., 1.);\r\n}\r\nvec3 getSky(){ return vec3(2., 1.4, .7); }\r\nfloat trig3(in vec3 p){\r\n    p = cos(p*2. + (cos(p.yzx) + 1.)*1.57);\r\n    return dot(p, vec3(0.1666)) + 0.5;\r\n}\r\nfloat trigNoise3D(in vec3 p){\r\n  const mat3 m3RotTheta = mat3(0.25, -0.866, 0.433, 0.9665, 0.25, -0.2455127, -0.058, 0.433, 0.899519 )*1.5;\r\n\tfloat res = 0.;\r\n  float t = trig3(p*3.14159265);\r\n   p += (t);\r\n  p = m3RotTheta*p;\r\n  res += t;\r\n  t = trig3(p*3.14159265);\r\n   p += (t)*0.7071;\r\n  p = m3RotTheta*p;\r\n  res += t*0.7071;\r\n  t = trig3(p*3.14159265);\r\n\tres += t*0.5;\r\n\treturn res/2.2071;\r\n}\r\nfloat hash31(vec3 p){ return fract(sin(dot(p, vec3(127.1, 311.7, 74.7)))*43758.5453); }\r\nfloat getMist(in vec3 ro, in vec3 rd, in vec3 lp, in float t){\r\n    float mist = 0.;\r\n    ro += rd*t/3.;\r\n    for (int i = 0; i<3; i++){\r\n        float sDi = length(lp-ro)/FAR;\r\n\t    float sAtt = 1./(1. + sDi*0.1 + sDi*sDi*0.01);\r\n        mist += trigNoise3D(ro/2.)*sAtt;\r\n        ro += rd*t/3.;\r\n    }\r\n    return clamp(mist/1.5 + hash31(ro)*0.1-0.05, 0., 1.);\r\n}\r\nvoid main() {\r\n\tvec2 u = uv * 2.0 - 1.0;\r\n\tvec3 ro = vec3(0, 0, iGlobalTime*8.);\r\n\tvec3 lookAt = ro + vec3(0, 0, .5);\r\n\tro.xy += path(ro.z);\r\n\tlookAt.xy += path(lookAt.z);\r\n    float FOV = 3.14159265/2.5;\r\n    vec3 forward = normalize(lookAt - ro);\r\n    vec3 right = normalize(vec3(forward.z, 0, -forward.x ));\r\n    vec3 up = cross(forward, right);\r\n    vec3 rd = normalize(forward + FOV*u.x*right + FOV*u.y*up);\r\n\trd.xy = rot2( path(lookAt.z).x/64. )*rd.xy;\r\n    vec3 lp = vec3(FAR*.5, FAR, FAR) + vec3(0, 0, ro.z);\r\n    float t = trace(ro, rd);\r\n    vec3 sky = getSky();\r\n    vec3 col = sky;\r\n    vec3 sp = ro+t*rd;\r\n    float pathHeight = sp.y-path(sp.z).y;\r\n    if (t < FAR){\r\n        vec3 sn = normal( sp );\r\n        vec3 ld = lp-sp;\r\n        ld /= max(length(ld), 0.001);\r\n        const float tSize = 1./4.;\r\n        sn = doBumpMap(sp, sn, .75/(1. + t/FAR*.25));\r\n        float bf = (pathHeight + 5. < 0.)?  .05: .025;\r\n        sn = doBumpMap(iChannel0, sp*tSize, sn, bf/(1. + t/FAR));\r\n        float shd = softShadow(sp, ld, 0.05, FAR, 8.);\r\n        float ao = calculateAO(sp, sn);\r\n        float dif = max( dot( ld, sn ), 0.0);\r\n        float spe = pow(max( dot( reflect(-ld, sn), -rd ), 0.0 ), 5.);\r\n        float fre = clamp(1.0 + dot(rd, sn), 0.0, 1.0);\r\n\t\tfloat Schlick = pow( 1. - max(dot(rd, normalize(rd + ld)), 0.), 5.0);\r\n\t\tfloat fre2 = mix(.2, 1., Schlick);\r\n        float amb = fre*fre2*.7 + .05;\r\n        col = clamp(mix(vec3(1.152, 0.4275,.153), vec3(.225, 0.05985, 0.0153), -sn.y*.5 + pathHeight*.5 + 1.75), vec3(.9, 0.534375, 0.239), vec3(.9, .855, .765));\r\n        col = smoothstep(-.5, 1., tex3D(iChannel0, sp*tSize, sn)*2.)*(col + vec3(.225, .21375, .19125));\r\n        col += smoothstep(0., 1., -pathHeight - 5.5)*fre*.25;\r\n        col += getSky()*fre*fre2;\r\n        col = (col*(dif + .1) + vec3(1)*fre2*spe)*shd*ao + amb*pow(col, vec3(2.));\r\n    }\r\n\tfloat dust = getMist(ro, rd, lp, t)*(1.-clamp((pathHeight - 5.)*.125, 0., 1.));\r\n    sky = getSky()*mix(1., .75, dust);\r\n    col = mix(col, sky, min(t*t*1.5/FAR/FAR, 1.));\r\n    u = uv;\r\n    col = min(col, 1.)*pow( 16.0*u.x*u.y*(1.0-u.x)*(1.0-u.y) , .125);\r\n\t  gl_FragColor = vec4(sqrt(clamp(col, 0., 1.)), 1);\r\n}\r\n`\r\n  }\r\n})\r\n\r\nconst DesertPassage = ({ time }) => (\r\n  <Node\r\n    shader={shaders.desertPassage}\r\n    uniforms={{\r\n      iGlobalTime: time / 1000,\r\n      iChannel0: shadertoyTex17jpg\r\n    }}\r\n  />\r\n)\r\n\r\nconst DesertPassageLoop = timeLoop(DesertPassage, { frameRate: 30 })\r\n\r\nexport default DesertPassageLoop\r\n","import React from 'react'\r\nimport { Shaders, Node, GLSL } from 'gl-react'\r\nimport { Surface } from 'gl-react-dom'\r\n\r\nimport timeLoop from '../../../common/timeLoop'\r\n\r\nconst shaders = Shaders.create({\r\n  squareTunnel: {\r\n    // from https://en.wikipedia.org/wiki/Shadertoy\r\n    frag: GLSL`\r\nprecision highp float;\r\nvarying vec2 uv;\r\nuniform float iGlobalTime;\r\nvoid main() {\r\n  vec2 p = 2.0 * uv - vec2(1.0);\r\n  float a = atan(p.y,p.x);\r\n  float r = pow( pow(p.x*p.x,4.0) + pow(p.y*p.y,4.0), 1.0/8.0 );\r\n  vec2 uv = vec2( 1.0/r + 0.2*iGlobalTime, a );\r\n  float f = cos(12.0*uv.x)*cos(6.0*uv.y);\r\n  vec3 col = 0.5 + 0.5*sin( 3.1416*f + vec3(0.0,0.5,1.0) );\r\n  col = col*r;\r\n  gl_FragColor = vec4( col, 1.0 );\r\n}\r\n`\r\n  }\r\n})\r\n\r\nconst SquareTunnel = ({ time }) => (\r\n  <Node shader={shaders.squareTunnel} uniforms={{ iGlobalTime: time / 1000 }} />\r\n)\r\n\r\nconst Example3 = timeLoop(SquareTunnel)\r\n\r\nexport default Example3\r\n","import React from 'react'\r\nimport { Shaders, Node, GLSL } from 'gl-react'\r\nimport { Surface } from 'gl-react-dom'\r\n\r\nimport timeLoop from '../../../common/timeLoop'\r\n\r\nconst shaders = Shaders.create({\r\n  sdf1: {\r\n    frag: GLSL`\r\nprecision highp float;\r\nvarying vec2 uv;\r\nuniform float time;\r\n\r\nfloat smin(float a, float b, float k) {\r\n  float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\r\n  return mix( b, a, h ) - k*h*(1.0-h);\r\n}\r\nfloat sdSphere(vec3 p, float s) {\r\n  return length(p) - s;\r\n}\r\nfloat sdTorus(vec3 p, vec2 t) {\r\n  vec2 q = vec2(length(p.xz)-t.x,p.y);\r\n  return length(q)-t.y;\r\n}\r\nfloat sdBox(vec3 p, vec3 b) {\r\n  vec3 d = abs(p) - b;\r\n  return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\r\n}\r\nvec3 opRep(inout vec3 p, vec3 c) {\r\n  vec3 m = mod(p, c);\r\n  vec3 id = (p - m) / c;\r\n  p = m - 0.5 * c;\r\n  return id;\r\n}\r\n\r\nvec2 scene (vec3 p) {\r\n  p.x += time;\r\n  vec3 id = opRep(p, vec3(2.0, 14.0, 4.0));\r\n  p.y += 0.5 + 0.5 * cos(4.3 * (id.x + time) + 1.3 * (id.z + time));\r\n  float rot = time + cos(30.0 * id.x + 123.4 * id.z);\r\n  p.xz *= mat2(\r\n    cos(rot), sin(rot),\r\n    -sin(rot), cos(rot)\r\n  );\r\n  float r = smin(\r\n    mix(sdSphere(p, 0.7), sdBox(p, vec3(0.7)), 0.5 + 0.5 * cos(time + id.x)),\r\n    sdTorus(p.xzy - vec3(0.0, 0.7, 0.0), vec2(0.2, 0.08)),\r\n    0.1\r\n  );\r\n  return vec2(r, id.x);\r\n}\r\nvec3 normal(vec3 p, float smoothness) {\r\n  vec3 n;\r\n  vec2 dn = vec2(smoothness, 0.0);\r\n  return normalize(vec3(\r\n    scene(p + dn.xyy).x - scene(p - dn.xyy).x,\r\n    scene(p + dn.yxy).x - scene(p - dn.yxy).x,\r\n    scene(p + dn.yyx).x - scene(p - dn.yyx).x));\r\n}\r\n\r\nvec3 hsv2rgb(vec3 c) {\r\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\r\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\r\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\r\n}\r\n\r\nvoid main() {\r\n  vec3 direction = normalize(vec3(2.0 * uv - 1.0, 1.0));\r\n  float rotY = 0.6;\r\n  direction.zy *= mat2(\r\n    cos(rotY), sin(rotY),\r\n    -sin(rotY), cos(rotY)\r\n  );\r\n  vec3 origin = vec3(0.0, 3.0, 0.0);\r\n  float totalDist = 0.0;\r\n  vec2 res;\r\n  vec3 p;\r\n  for(int i = 0; i < 36; i++) {\r\n    p = origin + direction * totalDist;\r\n    res = scene(p);\r\n    totalDist += res.x;\r\n  }\r\n  vec3 nrml = normal(p, 0.002);\r\n  vec3 materialColor = hsv2rgb(vec3(res.y / 24.0, 0.8, 1.0));\r\n  vec3 light_dir = normalize(vec3(0.2, 1.0, 0.2));\r\n  float diffuse = dot(light_dir, nrml);\r\n  diffuse = diffuse * 0.5 + 0.5;\r\n  vec3 light_color = vec3(0.9, 0.8, 0.7);\r\n  vec3 ambient_color = vec3(0.2, 0.45, 0.6);\r\n  vec3 diffuseLit = materialColor * (diffuse * light_color + ambient_color);\r\n  float fogFactor = smoothstep(10.0, 50.0, totalDist);\r\n  gl_FragColor = vec4(mix(diffuseLit, vec3(0.1), fogFactor), 1.0);\r\n}\r\n`\r\n  }\r\n})\r\n\r\nconst Example1 = timeLoop(({ time }) => (\r\n  <Node shader={shaders.sdf1} uniforms={{ time: 0.001 * time }} />\r\n))\r\n\r\nexport default Example1\r\n","import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Surface } from 'gl-react-dom'\r\nimport { Tooltip } from 'antd'\r\n\r\nimport Background from '../HeaderSection/Background'\r\n\r\nimport GradientsLoop from './BackgroundExamples/GradientsLoop'\r\nimport Example2 from './BackgroundExamples/Example2'\r\nimport DesertPassageLoop from './BackgroundExamples/DesertPassageLoop'\r\nimport Example3 from './BackgroundExamples/Example3'\r\nimport Example1 from './BackgroundExamples/Example1'\r\n\r\nconst text = 'Двойной клик - выбор фона.'\r\nconst Root = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 1200px;\r\n`\r\n\r\nconst Img = styled.input`\r\n  width: 300px;\r\n  height: 300px;\r\n  object-fit: contain;\r\n`\r\n\r\nconst ImgWrapper = styled.button`\r\n  display: block;\r\n  border: none;\r\n  background-color: #fff;\r\n  cursor: pointer;\r\n  width: 300px;\r\n  height: 300px;\r\n  margin: 20px;\r\n`\r\n\r\nconst ImagesBlock = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`\r\nconst elements = [\r\n  {\r\n    id: '1',\r\n    value: <Example1 />\r\n  },\r\n  {\r\n    id: '2',\r\n    value: <GradientsLoop />\r\n  },\r\n  {\r\n    id: '3',\r\n    value: <Example2 />\r\n  },\r\n  {\r\n    id: '4',\r\n    value: <DesertPassageLoop />\r\n  },\r\n  {\r\n    id: '5',\r\n    value: <Example3 />\r\n  },\r\n  ,\r\n  {\r\n    id: '6',\r\n    value: <Background />\r\n  }\r\n]\r\n\r\nexport default class ConstructorLayout extends Component {\r\n  state = {\r\n    selectedItem: null\r\n  }\r\n\r\n  selectNewItem = (e) => {\r\n    const value = elements.filter((item) => item.id == e.currentTarget.id)\r\n\r\n    this.setState({\r\n      selectedItem: value[0].value\r\n    })\r\n    console.log(this.state.selectedItem)\r\n\r\n    this.props.getSelectedItem(this.state.selectedItem)\r\n  }\r\n\r\n  render() {\r\n    const { selectNewItem } = this\r\n    return (\r\n      <Root>\r\n        <ImagesBlock>\r\n          {elements.map((item) => (\r\n            <Tooltip title={text} key={item.id} id={item.id}>\r\n              <ImgWrapper onClick={selectNewItem} id={item.id} key={item.id}>\r\n                <Surface\r\n                  width=\"400px\"\r\n                  height=\"300px\"\r\n                  id={item.id}\r\n                  key={item.id}\r\n                >\r\n                  {item.value}\r\n                </Surface>\r\n              </ImgWrapper>\r\n            </Tooltip>\r\n          ))}\r\n        </ImagesBlock>\r\n      </Root>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Surface } from 'gl-react-dom'\r\nimport { Shaders, Node, GLSL, connectSize } from 'gl-react'\r\n\r\nconst shaders = Shaders.create({\r\n  Saturate: {\r\n    frag: GLSL`\r\n  precision highp float;\r\n  varying vec2 uv;\r\n  uniform sampler2D t;\r\n  uniform float contrast, saturation, brightness;\r\n  const vec3 L = vec3(0.2125, 0.7154, 0.0721);\r\n  void main() {\r\n    vec4 c = texture2D(t, uv);\r\n      vec3 brt = c.rgb * brightness;\r\n      gl_FragColor = vec4(mix(\r\n      vec3(0.5),\r\n      mix(vec3(dot(brt, L)), brt, saturation),\r\n      contrast), c.a);\r\n  }\r\n  `\r\n  }\r\n})\r\n\r\nconst Saturate = ({ contrast, saturation, brightness, children }) => (\r\n  <Node\r\n    shader={shaders.Saturate}\r\n    uniforms={{ contrast, saturation, brightness, t: children }}\r\n  />\r\n)\r\n\r\nexport default class Output extends Component {\r\n  render() {\r\n    const {\r\n      contrast,\r\n      saturation,\r\n      brightness,\r\n      selectedItem,\r\n      width,\r\n      height\r\n    } = this.props\r\n    return (\r\n      <div>\r\n        tthrtht\r\n        <Surface width={width} height={height}>\r\n          <Saturate\r\n            contrast={contrast}\r\n            saturation={saturation}\r\n            brightness={brightness}\r\n          >\r\n            {selectedItem}\r\n          </Saturate>\r\n        </Surface>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Modal } from 'antd'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CodeArea = styled.div`\r\n  background-color: #c4c4c4;\r\n  padding: 20px 20px;\r\n  border-radius: 10px;\r\n  margin-bottom: 20px;\r\n`\r\n\r\nexport default class GenerateModal extends Component {\r\n  render() {\r\n    const { visible, onOk, onCancel } = this.props\r\n    return (\r\n      <Modal\r\n        title=\"Фон создан\"\r\n        visible={visible}\r\n        onOk={onOk}\r\n        onCancel={onCancel}\r\n      >\r\n        <p>Копируйте код ниже и добавьте на ваш сайт</p>\r\n        <CodeArea>\r\n          <code>\r\n            {\r\n              '<iframe src=\"https://anastasia8888.github.io/interactive_backgrounds/output\" />'\r\n            }\r\n          </code>\r\n        </CodeArea>\r\n\r\n        <Link to=\"/output/\">Посмотреть превью</Link>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Shaders, Node, GLSL, connectSize } from 'gl-react'\r\nimport { Surface } from 'gl-react-dom'\r\nimport { Slider, Input, Row, Button } from 'antd'\r\nimport styled from 'styled-components'\r\n\r\nimport Output from '../Output'\r\n\r\nimport GenerateModal from './GenerateModal'\r\n\r\nconst shaders = Shaders.create({\r\n  Saturate: {\r\n    frag: GLSL`\r\n  precision highp float;\r\n  varying vec2 uv;\r\n  uniform sampler2D t;\r\n  uniform float contrast, saturation, brightness;\r\n  const vec3 L = vec3(0.2125, 0.7154, 0.0721);\r\n  void main() {\r\n    vec4 c = texture2D(t, uv);\r\n      vec3 brt = c.rgb * brightness;\r\n      gl_FragColor = vec4(mix(\r\n      vec3(0.5),\r\n      mix(vec3(dot(brt, L)), brt, saturation),\r\n      contrast), c.a);\r\n  }\r\n  `\r\n  }\r\n})\r\n\r\nconst GenerateButton = styled(Button)`\r\n  display: block;\r\n  margin: 20px auto 0 auto;\r\n`\r\nconst OutputBlock = styled.div`\r\n  display: none;\r\n`\r\n\r\nconst Root = styled.div`\r\n  margin: 50px 180px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`\r\nconst Inputs = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: 5px 0;\r\n`\r\nconst ImageBlock = styled.div`\r\n  width: 50%;\r\n`\r\nconst Header = styled.div`\r\n  font-size: 25px;\r\n`\r\nconst Hr = styled.hr`\r\n  width: 100%;\r\n  margin: 15px 0;\r\n  background-color: #c9c9c9;\r\n  border: none;\r\n  height: 1px;\r\n`\r\n\r\nconst SettingsBlock = styled.div`\r\n  padding: 50px 80px;\r\n  width: 500px;\r\n  background: linear-gradient(to left, #fdffdd, #fff, #fdffdd);\r\n`\r\nconst ItemName = styled.div`\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n`\r\n\r\nexport const Saturate = ({ contrast, saturation, brightness, children }) => (\r\n  <Node\r\n    shader={shaders.Saturate}\r\n    uniforms={{ contrast, saturation, brightness, t: children }}\r\n  />\r\n)\r\n\r\nexport default class Settings extends Component {\r\n  state = {\r\n    contrast: 1,\r\n    saturation: 1,\r\n    brightness: 1,\r\n    blue: 0.1,\r\n    visible: false,\r\n    height: '400px',\r\n    width: '600px'\r\n  }\r\n\r\n  onChangeContrast = (value) => {\r\n    this.setState({\r\n      contrast: value\r\n    })\r\n  }\r\n  onChangeSaturation = (value) => {\r\n    this.setState({\r\n      saturation: value\r\n    })\r\n  }\r\n  onChangeBrightness = (value) => {\r\n    this.setState({\r\n      brightness: value\r\n    })\r\n  }\r\n  onChangeBlue = (value) => {\r\n    this.setState({\r\n      blue: value\r\n    })\r\n  }\r\n  onChangeHeight = (e) => {\r\n    this.setState({\r\n      height: e.target.value\r\n    })\r\n  }\r\n  onChangeWidth = (e) => {\r\n    this.setState({\r\n      width: e.target.value\r\n    })\r\n  }\r\n\r\n  generateBackground = () => {\r\n    this.setState({\r\n      visible: true\r\n    })\r\n  }\r\n\r\n  onOk = () => {\r\n    this.setState({\r\n      visible: false\r\n    })\r\n  }\r\n\r\n  onCancel = () => {\r\n    this.setState({\r\n      visible: false\r\n    })\r\n  }\r\n  render() {\r\n    const {\r\n      contrast,\r\n      saturation,\r\n      brightness,\r\n      visible,\r\n      width,\r\n      height\r\n    } = this.state\r\n\r\n    return (\r\n      <Root>\r\n        <ImageBlock>\r\n          <Surface width={600} height={400}>\r\n            <Saturate {...this.state}>{this.props.selectedItem}</Saturate>\r\n          </Surface>\r\n        </ImageBlock>\r\n        <SettingsBlock>\r\n          <Header>Меню настроек</Header>\r\n          <Hr />\r\n          <Row>\r\n            <ItemName>Контраст</ItemName>\r\n            <Slider\r\n              min={1}\r\n              max={20}\r\n              onChange={this.onChangeContrast}\r\n              value={typeof contrast === 'number' ? contrast : 0}\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <ItemName>Насыщенность</ItemName>\r\n            <Slider\r\n              min={1}\r\n              max={20}\r\n              onChange={this.onChangeSaturation}\r\n              value={typeof saturation === 'number' ? saturation : 0}\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <ItemName>Яркость</ItemName>\r\n            <Slider\r\n              min={1}\r\n              max={20}\r\n              onChange={this.onChangeBrightness}\r\n              value={typeof brightness === 'number' ? brightness : 0}\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <Inputs>\r\n              <ItemName>Высота фона</ItemName>\r\n              <Input\r\n                placeholder=\"Введите высоту\"\r\n                style={{ width: '200px' }}\r\n                onBlur={this.onChangeHeight}\r\n              />\r\n            </Inputs>\r\n          </Row>\r\n          <Row>\r\n            <Inputs>\r\n              <ItemName>Ширина фона</ItemName>\r\n              <Input\r\n                placeholder=\"Введите ширину\"\r\n                style={{ width: '200px' }}\r\n                onBlur={this.onChangeWidth}\r\n              />\r\n            </Inputs>\r\n          </Row>\r\n          <GenerateButton type=\"primary\" onClick={this.generateBackground}>\r\n            Сгенерировать фон\r\n          </GenerateButton>\r\n\r\n          {/* <Output\r\n            width={width}\r\n            height={height}\r\n            contrast={contrast}\r\n            saturation={saturation}\r\n            brightness={brightness}\r\n            selectedItem={this.props.selectedItem}\r\n          /> */}\r\n        </SettingsBlock>\r\n        <GenerateModal\r\n          visible={visible}\r\n          onOk={this.onOk}\r\n          onCancel={this.onCancel}\r\n        />\r\n      </Root>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport ConstructorLayout from './ConstructorLayout'\r\nimport Settings from './Settings'\r\nimport Example2 from './BackgroundExamples/Example2'\r\n\r\nconst Root = styled.div`\r\n  position: relative;\r\n  margin-top: 200px;\r\n`\r\n\r\nconst Header = styled.h1`\r\n  font-weight: bold;\r\n  color: #f4bb41;\r\n  font-size: 66px;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n`\r\n\r\nexport default class BackgroundCarousel extends Component {\r\n  state = {\r\n    selectedItem: <Example2 />\r\n  }\r\n\r\n  getSelectedItem = (el) => {\r\n    this.setState({\r\n      selectedItem: el\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <Root>\r\n        <Header id=\"constructor\">Конструктор</Header>\r\n        <Settings selectedItem={this.state.selectedItem} />\r\n        <ConstructorLayout getSelectedItem={this.getSelectedItem} />\r\n      </Root>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Surface } from 'gl-react-dom'\r\n\r\nimport Header from './HeaderSection/Header'\r\nimport Background from './HeaderSection/Background'\r\nimport BackgroundCarousel from './ConstructorSection/BackgroundCarousel'\r\n\r\nconst Root = styled.div`\r\n  margin: 0;\r\n  padding: 0;\r\n  height: 100vh;\r\n  font-family: 'Arial';\r\n`\r\nconst BackgroundWrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  z-index: 0;\r\n`\r\n\r\nexport default function Main() {\r\n  return (\r\n    <Root>\r\n      <Header />\r\n      <BackgroundWrapper>\r\n        <Surface height=\"100vh\" width=\"100%\">\r\n          <Background />\r\n        </Surface>\r\n      </BackgroundWrapper>\r\n      <BackgroundCarousel />\r\n    </Root>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport 'antd/dist/antd.css'\nimport Main from './components/Main'\nimport Output from './components/Output'\nimport Background from './components/HeaderSection/Background'\n\nexport default function App() {\n  const test = '33'\n  return (\n    <Router>\n      <Route path=\"/\" exact component={Main} />\n      <Route path=\"/output/\" component={Output} />\n    </Router>\n  )\n}\n"],"sourceRoot":""}